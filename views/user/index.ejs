<!DOCTYPE html>
<html>

<head>
    <title>GIS Map</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="keywords" content="gis, sig">
    <meta name="author" content="DeniSetiawan">
    <meta name="robots" content="index, follow">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description"
        content="Sistem Informasi Geografis Pemetaan Fasilitas dan Layanan Publik Berbasis Web Pada Kecamatan Manggelewa">
    <meta property="og:title"
        content="Sistem Informasi Geografis Pemetaan Fasilitas dan Layanan Publik Berbasis Web Pada Kecamatan Manggelewa">
    <meta property="og:description"
        content="Sistem Informasi Geografis Pemetaan Fasilitas dan Layanan Publik Berbasis Web Pada Kecamatan Manggelewa">
    <meta property="og:image" content="https://telegra.ph/file/05153448df2c81f607435.png">
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
    <meta name="format-detection" content="telephone=no">
    <base href="/">
    <!-- Link to Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
    <style>
        html,
        body {
            font-family: 'Cairo', sans-serif;
            height: 100%;
            margin: 0;
            padding: 0;
            width: 100%;
            background-color: #f4f4f4;
            /* Background color for the page */
        }

        /* Map container */
        #map {
            height: 100%;
            width: 100%;
        }

        /* Search container */
        #search-container {
            position: absolute;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 5;
            display: flex;
            align-items: center;
            width: 90%;
            max-width: 600px;
            background: white;
            padding: 5px 10px;
            border-radius: 4px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        }

        /* Hamburger menu icon */
        #hamburger-menu {
            font-size: 20px;
            margin-right: 10px;
            cursor: pointer;
            color: #555;
            /* Color of the hamburger icon */
        }

        /* Dropdown menu */
        #dropdown-menu {
            position: absolute;
            top: 50px;
            left: 0;
            background: white;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            border-radius: 4px;
            display: none;
            z-index: 10;
            min-width: 120px;
            /* Minimum width of the dropdown */
        }

        /* Show dropdown menu */
        #dropdown-menu.show {
            display: block;
        }

        /* Dropdown items */
        .dropdown-item {
            cursor: pointer;
            padding: 10px;
            border-bottom: 1px solid #ddd;
            text-align: center;
            transition: background-color 0.3s ease;
            /* Smooth background color transition */
        }

        /* Hover effect for dropdown items */
        .dropdown-item:hover {
            background-color: #f0f0f0;
            /* Background color on hover */
        }

        /* Map type dropdown */
        .map-type-dropdown {
            position: absolute;
            top: 50px;
            left: 125px;
            background: white;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            border-radius: 4px;
            display: none;
            z-index: 20;
            min-width: 120px;
            /* Minimum width of the map type dropdown */
        }

        /* Show map type dropdown */
        .map-type-dropdown.show {
            display: block;
        }

        /* Map type options */
        .map-type-option {
            cursor: pointer;
            padding: 10px;
            border-bottom: 1px solid #ddd;
            text-align: center;
            transition: background-color 0.3s ease;
            /* Smooth background color transition */
        }

        /* Last map type option without bottom border */
        .map-type-option:last-child {
            border-bottom: none;
        }

        /* Hover effect for map type options */
        .map-type-option:hover {
            background-color: #f0f0f0;
            /* Background color on hover */
        }

        /* Search input */
        #search-input {
            flex-grow: 1;
            border: none;
            padding: 10px;
            font-size: 16px;
            outline: none;
            /* Remove outline on focus */
        }

        /* Search button */
        #search-button {
            font-size: 20px;
            margin-left: 10px;
            cursor: pointer;
            color: #555;
            /* Color of the search icon */
            transition: color 0.3s ease;
            /* Smooth color transition */
        }

        /* Hover effect for search button */
        #search-button:hover {
            color: #333;
            /* Darker color on hover */
        }

        /* Search results container */
        #search-results {
            position: absolute;
            top: 50px;
            left: 50%;
            transform: translateX(-50%);
            width: 90%;
            max-width: 600px;
            max-height: 300px;
            overflow-y: auto;
            background: white;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            border-radius: 4px;
            display: none;
            z-index: 15;
        }

        /* Search result items */
        .search-result-item {
            cursor: pointer;
            padding: 10px;
            border-bottom: 1px solid #ddd;
            transition: background-color 0.3s ease;
            /* Smooth background color transition */
        }

        /* Hover effect for search result items */
        .search-result-item:hover {
            background-color: #f0f0f0;
            /* Background color on hover */
        }
      /* Styling untuk ikon pada dropdown menu */
      #dropdown-menu a {
      display: flex;
      align-items: center;
      text-decoration: none; /* Menghapus garis bawah */
      color: #333; /* Warna teks yang diinginkan */
      }

      #dropdown-menu a i {
      margin-right: 10px; /* Jarak antara ikon dan teks */
      }

      /* Styling untuk ikon pada dropdown map type */
      .map-type-dropdown .map-type-option {
      display: flex;
      align-items: center;
      text-decoration: none; /* Menghapus garis bawah */
      color: #333; /* Warna teks yang diinginkan */
      padding: 10px;
      }

      .map-type-dropdown .map-type-option i {
      margin-right: 10px; /* Jarak antara ikon dan teks */
      }


        /* Styling untuk tautan pada dropdown map type */
        .map-type-dropdown a {
        text-decoration: none; /* Menghapus garis bawah */
        color: #333; /* Warna teks yang diinginkan */
        }

        /* Responsive adjustments */
        @media (max-width: 600px) {
            #search-input {
                font-size: 14px;
                padding: 8px;
            }

            .search-result-item {
                padding: 8px;
            }
        }
    </style>
</head>

<body>
    <div id="search-container">
        <i id="hamburger-menu" class="fas fa-bars"></i>
        <div id="dropdown-menu">
            <div class="dropdown-item" id="map-type">
                <i class="fas fa-map"></i> Map Type
            </div>
            <div class="dropdown-item" id="logout">
                <a href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
            </div>
        </div>

        <div id="map-type-dropdown" class="map-type-dropdown">
            <div class="map-type-option" id="roadmap">
                <i class="fas fa-road"></i> Roadmap
            </div>
            <div class="map-type-option" id="satellite">
                <i class="fas fa-satellite"></i> Satellite
            </div>
            <div class="map-type-option" id="hybrid">
                <i class="fas fa-globe"></i> Hybrid
            </div>
            <div class="map-type-option" id="terrain">
                <i class="fas fa-mountain"></i> Terrain
            </div>
        </div>

        <input id="search-input" type="text" placeholder="Telusuri Peta....">
        <i id="search-button" class="fas fa-search"></i>
        <div id="search-results"></div>
    </div>
    <div id="map"></div>

    <script
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD4P3rMVrMzwD_8l1I1ETldunN6Vdx7Tqk&callback=initMap&libraries=places&v=weekly"
        defer></script>
    <script>
        let map;
        let activeInfoWindow;
        let markers = [];
        const defaultLatLng = {
            lat: -8.532829,
            lng: 118.305939
        };

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 10,
                center: defaultLatLng,
                mapTypeControl: false,
                fullscreenControl: false,
            });

            fetchDataAndAddMarkers();

            document.getElementById('search-input').addEventListener('input', handleSearch);
            document.getElementById('search-button').addEventListener('click', clearSearch);

            const hamburgerMenu = document.getElementById('hamburger-menu');
            const dropdownMenu = document.getElementById('dropdown-menu');
            const mapTypeDropdown = document.getElementById('map-type-dropdown');

            hamburgerMenu.addEventListener('click', () => {
                dropdownMenu.classList.toggle('show');
                mapTypeDropdown.classList.remove('show'); // Hide map type dropdown when main dropdown is shown
            });

            document.addEventListener('click', (event) => {
                if (!event.target.closest('#dropdown-menu') && !event.target.closest('#hamburger-menu')) {
                    dropdownMenu.classList.remove('show');
                }
                if (!event.target.closest('.map-type-dropdown') && !event.target.closest('#map-type')) {
                    mapTypeDropdown.classList.remove('show');
                }
            });

            document.getElementById('map-type').addEventListener('click', () => {
                mapTypeDropdown.classList.toggle('show');
            });

            document.getElementById('roadmap').addEventListener('click', () => {
                map.setMapTypeId('roadmap');
                mapTypeDropdown.classList.remove('show');
            });

            document.getElementById('satellite').addEventListener('click', () => {
                map.setMapTypeId('satellite');
                mapTypeDropdown.classList.remove('show');
            });

            document.getElementById('hybrid').addEventListener('click', () => {
                map.setMapTypeId('hybrid');
                mapTypeDropdown.classList.remove('show');
            });

            document.getElementById('terrain').addEventListener('click', () => {
                map.setMapTypeId('terrain');
                mapTypeDropdown.classList.remove('show');
            });

            document.getElementById('logout').addEventListener('click', () => {

                dropdownMenu.classList.remove('show');
            });
        }

        function fetchDataAndAddMarkers() {
            fetch('/fasilitaspendidikan')
                .then(response => response.json())
                .then(fasilitasPendidikan => {
                    console.log('Data Fasilitas Pendidikan:', fasilitasPendidikan);
                    fasilitasPendidikan.forEach(fasilitas => {
                        if (fasilitas.latitude && fasilitas.longitude) {
                            const lat = parseFloat(fasilitas.latitude);
                            const lng = parseFloat(fasilitas.longitude);

                            if (!isNaN(lat) && !isNaN(lng)) {
                                const marker = new google.maps.Marker({
                                    position: {
                                        lat,
                                        lng
                                    },
                                    map,
                                    title: fasilitas.nama,
                                    animation: google.maps.Animation.DROP,
                                });

                                const infoWindow = new google.maps.InfoWindow({
                                    content: `
                                        <h3>${fasilitas.nama}</h3>
                                        <p>Alamat: ${fasilitas.alamat || 'Tidak ada alamat'}</p>
                                        <p>Fasilitas: ${fasilitas.fasilitas || 'Tidak ada informasi fasilitas'}</p>
                                        <p>Jam Buka: ${fasilitas.jamBuka || 'Tidak ada informasi'}</p>
                                        <p>Jam Tutup: ${fasilitas.jamTutup || 'Tidak ada informasi'}</p>
                                    `
                                });

                                marker.addListener('click', () => {
                                    if (activeInfoWindow) {
                                        activeInfoWindow.close();
                                    }

                                    infoWindow.open(map, marker);
                                    activeInfoWindow = infoWindow;
                                });

                                markers.push({
                                    marker,
                                    fasilitas
                                });
                            } else {
                                console.error('Invalid latitude or longitude for:', fasilitas);
                            }
                        }
                    });
                })
                .catch(error => console.error('Error fetching data:', error));
        }

        function handleSearch(event) {
            const query = event.target.value.toLowerCase();
            const resultsContainer = document.getElementById('search-results');
            resultsContainer.innerHTML = '';

            if (query) {
                const results = markers.filter(({
                    fasilitas
                }) => {
                    return fasilitas.nama.toLowerCase().includes(query) || (fasilitas.alamat && fasilitas.alamat
                        .toLowerCase().includes(query));
                });

                results.forEach(({
                    fasilitas,
                    marker
                }) => {
                    const item = document.createElement('div');
                    item.classList.add('search-result-item');
                    item.textContent = fasilitas.nama;
                    item.addEventListener('click', () => {
                        map.setCenter(marker.getPosition());
                        map.setZoom(15);

                        if (activeInfoWindow) {
                            activeInfoWindow.close();
                        }

                        const infoWindow = new google.maps.InfoWindow({
                            content: `
                                <h3>${fasilitas.nama}</h3>
                                <p>Alamat: ${fasilitas.alamat || 'Tidak ada alamat'}</p>
                                <p>Fasilitas: ${fasilitas.fasilitas || 'Tidak ada informasi fasilitas'}</p>
                                <p>Jam Buka: ${fasilitas.jamBuka || 'Tidak ada informasi'}</p>
                                <p>Jam Tutup: ${fasilitas.jamTutup || 'Tidak ada informasi'}</p>
                            `
                        });

                        infoWindow.open(map, marker);
                        activeInfoWindow = infoWindow;
                    });
                    resultsContainer.appendChild(item);
                });

                resultsContainer.style.display = 'block';
                document.getElementById('search-button').classList.replace('fa-search', 'fa-times');
            } else {
                resultsContainer.style.display = 'none';
                clearSearch();
            }
        }

        function clearSearch() {
            document.getElementById('search-input').value = '';
            document.getElementById('search-button').classList.replace('fa-times', 'fa-search');
            const resultsContainer = document.getElementById('search-results');
            resultsContainer.style.display = 'none';

            // Close all info windows
            if (activeInfoWindow) {
                activeInfoWindow.close();
            }

            // Reset map to default center and zoom
            map.setCenter(defaultLatLng);
            map.setZoom(10);
        }

        window.initMap = initMap;
    </script>
</body>

</html>